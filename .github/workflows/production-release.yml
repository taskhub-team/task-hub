name: Production Release

on:
  push:
    branches:
      - main

permissions:
  contents: write # This gives permission to update repository content
  issues: write # For creating/updating issues
  pull-requests: write # For creating/updating PRs

jobs:
  release:
    name: Release and Deploy to Production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: Run tests
        run: pnpm test || echo "No tests implemented yet"

      - name: Build project
        run: pnpm build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_ENVIRONMENT: "production"
          VITE_LOGGING_LEVEL: "error"

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm release

      - name: Get new version
        id: get-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create build artifact
        run: |
          cd dist
          zip -r ../taskhub-production-v${{ steps.get-version.outputs.version }}.zip .
          cd ..
          echo "Build timestamp: $(date)" > build-info.txt
          echo "Version: ${{ steps.get-version.outputs.version }}" >> build-info.txt
          echo "Commit: ${{ github.sha }}" >> build-info.txt
          echo "Branch: main" >> build-info.txt

      - name: Upload build artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: taskhub-production-v${{ steps.get-version.outputs.version }}
          path: |
            taskhub-production-v${{ steps.get-version.outputs.version }}.zip
            build-info.txt
          retention-days: 90

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Make script executable
        run: chmod +x .github/scripts/upload-prod-artifact.sh

      - name: Upload build to Azure Blob Storage
        id: upload_artifact
        run: |
          ./.github/scripts/upload-prod-artifact.sh \
            ${{ steps.get-version.outputs.version }} \
            ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
            ${{ github.sha }}

      - name: Deploy to Azure Static Web Apps
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist"
          api_location: ""
          skip_app_build: true

      - name: Post deployment notification
        if: success()
        run: |
          echo "ðŸš€ Successfully deployed version ${{ steps.get-version.outputs.version }} to production"
          echo "URL: https://kind-water-0ea27f900.6.azurestaticapps.net"
          echo "Build artifact: taskhub-production-v${{ steps.get-version.outputs.version }}.zip stored in Azure Blob Storage"
          echo "Download link: ${{ steps.upload_artifact.outputs.download_url }}"
